package com.posh.model;
// default package

// Generated Mar 12, 2023, 9:11:01 PM by Hibernate Tools 6.1.7.Final

import jakarta.persistence.*;

import java.math.BigDecimal;
import java.util.*;

/**
 * Orders generated by hbm2java
 */
@Entity
@Table(name = "orders", catalog = "posh")
public class Order implements java.io.Serializable {
    private int orderId;
    private User users;
    private Date orderDate;
    private BigDecimal totalPrice;
    private List<Orderitem> orderitemses = new ArrayList<>(0);
    private int status;
    private ShippingAddress shippingAddress;
    private String order_notes;

    public Order() {
    }

    public Order(User users, BigDecimal totalPrice, int status, String order_notes, ShippingAddress shippingAddress) {
        this.users = users;
        this.orderDate = new Date();
        this.totalPrice = totalPrice;
        this.status = status;
        this.shippingAddress = shippingAddress;
        this.order_notes = order_notes;
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "OrderID", unique = true, nullable = false)
    public int getOrderId() {
        return this.orderId;
    }

    public void setOrderId(int orderId) {
        this.orderId = orderId;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "UserID")
    public User getUsers() {
        return this.users;
    }

    public void setUsers(User users) {
        this.users = users;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "OrderDate", length = 19)
    public Date getOrderDate() {
        return this.orderDate;
    }

    public void setOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }

    @Column(name = "TotalPrice", precision = 10, scale = 2)
    public BigDecimal getTotalPrice() {
        return this.totalPrice;
    }

    public void setTotalPrice(BigDecimal totalPrice) {
        this.totalPrice = totalPrice;
    }

    @OneToMany(fetch = FetchType.EAGER, mappedBy = "orders", cascade = CascadeType.ALL)
    public List<Orderitem> getOrderitemses() {
        return this.orderitemses;
    }

    public void setOrderitemses(List<Orderitem> orderitemses) {
        this.orderitemses = orderitemses;
    }

    public int getStatus() {
        return status;
    }

    public void setStatus(int status) {
        this.status = status;
    }

    public BigDecimal calculateTotalPrice() {
        return orderitemses.stream()
                .map(orderitem -> orderitem.getPrice().multiply(BigDecimal.valueOf(orderitem.getQuantity())))
                .reduce(BigDecimal::add).get();
    }

    @OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.ALL, orphanRemoval = true)
    @JoinColumn(name = "orderid")
    public ShippingAddress getShippingAddress() {
        return shippingAddress;
    }

    public void setShippingAddress(ShippingAddress shippingAddress) {
        this.shippingAddress = shippingAddress;
    }

    @Column(name = "order_notes", nullable = true)
    public String getOrder_notes() {
        return order_notes;
    }

    public void setOrder_notes(String order_notes) {
        this.order_notes = order_notes;
    }
}
